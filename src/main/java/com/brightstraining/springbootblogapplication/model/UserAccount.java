package com.brightstraining.springbootblogapplication.model;

import lombok.Data;

import javax.persistence.*;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.util.HashSet;
import java.util.List;
import java.util.Optional;
import java.util.Set;

@Data
@Entity
@Table(name = "users")   //will create table in mysql
public class UserAccount {
    @Id  //this will be primary key
    @GeneratedValue(strategy = GenerationType.IDENTITY)   //will be generated in database automatically
    private Long id;   //unique autogenerated id of a user
    @NotEmpty(message="Username Name cannot be empty")
    @NotNull
    @Size(min = 2, max = 10, message = "Username should have between 2 and 10 letters")
    private String userName;
    @NotEmpty(message="First Name cannot be empty")
    @NotNull
    private String firstName;
    @NotEmpty(message="Last Name cannot be empty")
    @NotNull
    private String lastName;
    @NotEmpty(message="Email cannot be empty")
    @Email(message="Email pattern is not correct")
    private String email;
    @NotEmpty(message="Password cannot be empty")
    @NotNull
    @Size(min = 6, max = 255, message = "Password should have between 6 and 10 letters or numbers")
    private String password;

    private String profileInfo;
    @Column(name="is_active", nullable = false)
    private boolean isActive;
    @Column(name="is_admin")
    private boolean isAdmin;

    @OneToMany(mappedBy = "userAccount")   //onetomany as one user can have many posts
    private List<Post> posts;

    @ManyToMany(fetch = FetchType.EAGER)
    @JoinTable(name = "useraccount_authority", joinColumns = {@JoinColumn(name = "userAccount_id", referencedColumnName = "id")},
    inverseJoinColumns = {@JoinColumn(name = "authority_name", referencedColumnName = "name")})
    private Set<Authority> authorities = new HashSet<>();




    public UserAccount() {

    }


    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getUserName() {
        return userName;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getProfileInfo() {
        return profileInfo;
    }

    public void setProfileInfo(String profileInfo) {
        this.profileInfo = profileInfo;
    }

    public boolean isActive() {
        return isActive;
    }

    public void setActive(boolean active) {
        isActive = active;
    }

    public boolean isAdmin() {
        return isAdmin;
    }

    public void setAdmin(boolean admin) {
        isAdmin = admin;
    }

    public List<Post> getPosts() {
        return posts;
    }

    public void setPosts(List<Post> posts) {
        this.posts = posts;
    }

    public Set<Authority> getAuthorities() {
        return authorities;
    }

    public void setAuthorities(Set<Authority> authorities) {
        this.authorities = authorities;
    }

    @Override
    public String toString() {
        return "UserAccount{" + ", firstName= '" + firstName + "'" + ", lastName= '" + lastName +  "'" +
                ", email= '" + email + "'" + ", authorities= " + authorities + "}";
    }


}
